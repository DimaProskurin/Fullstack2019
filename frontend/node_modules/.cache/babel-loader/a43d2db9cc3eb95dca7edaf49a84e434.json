{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { CompensationInfo } from \"../../components/generator/compensation\";\nimport { InputBlock } from \"../../components/generator/input\";\nimport { fetchCompensations } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { getCompensations } from \"../../utils\";\nexport class Generator extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (this.props.compensationList.length === 0) {\n      getCompensations().then(compensations => this.props.fetchCompensations(compensations));\n      console.log(\"test\");\n      console.log(this.props.compensationList);\n    }\n  }\n\n  render() {\n    if (this.props.compensationList.length !== 0) {\n      console.log(this.props.compensationList);\n      let currentCompensation = this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl);\n      console.log(currentCompensation);\n      return React.createElement(\"div\", {\n        className: \"row generatorContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(CompensationInfo, {\n        url: currentCompensation.url,\n        name: currentCompensation.name,\n        money: currentCompensation.money,\n        once: currentCompensation.once_a_term,\n        requirements: currentCompensation.requirements,\n        additionalInfo: currentCompensation.additional_info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(InputBlock, {\n        compensationUrl: this.props.compensationUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border\",\n        style: {\n          width: \"5rem\",\n          height: \"5rem\",\n          role: \"status\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading...\"))));\n    }\n  }\n\n}\nGenerator.propTypes = {\n  compensationUrl: String\n};\nGenerator.defaultProps = {\n  compensationUrl: \"\"\n};\n\nlet mapStateToProps = state => {\n  return {\n    compensationList: state.fetch.compensations\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCompensations\n};\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\nexport default Generator;","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx"],"names":["React","CompensationInfo","InputBlock","fetchCompensations","connect","getCompensations","Generator","Component","constructor","props","componentDidMount","compensationList","length","then","compensations","console","log","render","currentCompensation","filter","compensation","url","compensationUrl","name","money","once_a_term","requirements","additional_info","width","height","role","propTypes","String","defaultProps","mapStateToProps","state","fetch","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles.css'\nimport {CompensationInfo} from \"../../components/generator/compensation\";\nimport {InputBlock} from \"../../components/generator/input\";\nimport {fetchCompensations} from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport {getCompensations} from \"../../utils\";\n\nexport class Generator extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.compensationList.length === 0) {\n            getCompensations().then((compensations) => this.props.fetchCompensations(compensations));\n            console.log(\"test\");\n            console.log(this.props.compensationList);\n        }\n    }\n\n    render() {\n        if (this.props.compensationList.length !== 0) {\n            console.log(this.props.compensationList);\n            let currentCompensation =\n                this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl);\n            console.log(currentCompensation);\n\n            return (\n                <div className={\"row generatorContainer\"}>\n                    <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                        <CompensationInfo\n                            url={currentCompensation.url}\n                            name={currentCompensation.name}\n                            money={currentCompensation.money}\n                            once={currentCompensation.once_a_term}\n                            requirements={currentCompensation.requirements}\n                            additionalInfo={currentCompensation.additional_info}/>\n                    </div>\n                    <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                        <InputBlock compensationUrl={this.props.compensationUrl} />\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <div className=\"spinner-border\" style={{width: \"5rem\", height: \"5rem\", role: \"status\"}}>\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </header>\n                </div>\n            )\n        }\n\n    }\n}\n\nGenerator.propTypes = {\n    compensationUrl: String,\n};\n\nGenerator.defaultProps = {\n    compensationUrl: \"\"\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        compensationList: state.fetch.compensations\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchCompensations\n};\n\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\n\nexport default Generator;\n\n\n"]},"metadata":{},"sourceType":"module"}