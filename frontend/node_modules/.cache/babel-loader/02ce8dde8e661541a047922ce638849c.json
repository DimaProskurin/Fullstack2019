{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { Avatar } from \"../../components/main/avatar\";\n\nasync function getCompensations() {\n  let data = await (await fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard')).json();\n  return data;\n}\n\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props);\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    let compensations = getCompensations();\n    let compensationsItems = compensations.map((compensation, index) => React.createElement(ItemList, {\n      category: this.props.category,\n      id: \"drugs\",\n      title: compensation.name,\n      money: compensation.money,\n      documents: compensation.requirements,\n      addInfo: compensation.additional_info,\n      isOnce: compensation.once_a_term,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"Block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(List, {\n      items: compensationsItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\nCompensationList.propTypes = {\n  category: String\n};\nCompensationList.defaultProps = {\n  category: \"default\"\n};","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","Avatar","getCompensations","data","fetch","json","CompensationList","Component","constructor","props","render","compensations","compensationsItems","map","compensation","index","category","name","money","requirements","additional_info","once_a_term","propTypes","String","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;;AAEA,eAAeC,gBAAf,GAAkC;AAC9B,MAAIC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,gEAAD,CAAZ,EAAgFC,IAAhF,EAAjB;AACA,SAAOF,IAAP;AACH;;AAED,OAAO,MAAMG,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAHiD,CAKlD;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAIC,aAAa,GAAGT,gBAAgB,EAApC;AACA,QAAIU,kBAAkB,GAAGD,aAAa,CAACE,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KACtC,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QAA/B;AACU,MAAA,EAAE,EAAE,OADd;AAEU,MAAA,KAAK,EAAEF,YAAY,CAACG,IAF9B;AAGU,MAAA,KAAK,EAAEH,YAAY,CAACI,KAH9B;AAIU,MAAA,SAAS,EAAEJ,YAAY,CAACK,YAJlC;AAKU,MAAA,OAAO,EAAEL,YAAY,CAACM,eALhC;AAMU,MAAA,MAAM,EAAEN,YAAY,CAACO,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB,CAAzB;AASA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAET,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAvBiD;AA0BtDN,gBAAgB,CAACgB,SAAjB,GAA6B;AACzBN,EAAAA,QAAQ,EAAEO;AADe,CAA7B;AAIAjB,gBAAgB,CAACkB,YAAjB,GAAgC;AAC5BR,EAAAA,QAAQ,EAAE;AADkB,CAAhC","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {Avatar} from \"../../components/main/avatar\";\n\nasync function getCompensations() {\n    let data = await (await fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard')).json();\n    return data;\n}\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        let compensations = getCompensations();\n        let compensationsItems = compensations.map((compensation, index) =>\n            (<ItemList category={this.props.category}\n                       id={\"drugs\"}\n                       title={compensation.name}\n                       money={compensation.money}\n                       documents={compensation.requirements}\n                       addInfo={compensation.additional_info}\n                       isOnce={compensation.once_a_term}\n            />));\n        return (\n            <div className=\"Block\">\n                <List items={compensationsItems}/>\n            </div>\n        );\n\n    }\n}\n\nCompensationList.propTypes = {\n    category: String,\n};\n\nCompensationList.defaultProps = {\n    category: \"default\"\n};\n\n\n"]},"metadata":{},"sourceType":"module"}