{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { Avatar } from \"../../components/main/avatar\";\n\nasync function getCompensations() {\n  let data = await (await fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard')).json();\n  let compensations = data;\n  console.log(compensations);\n  let compensationsItems = compensations.map((compensation, index) => React.createElement(ItemList, {\n    category: this.props.category,\n    id: \"drugs\",\n    title: compensation.name,\n    money: compensation.money,\n    documents: compensation.requirements,\n    addInfo: compensation.additional_info,\n    isOnce: compensation.once_a_term,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    className: \"Block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(List, {\n    items: compensationsItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props);\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    return getCompensations();\n  }\n\n}\nCompensationList.propTypes = {\n  category: String\n};\nCompensationList.defaultProps = {\n  category: \"default\"\n};","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","Avatar","getCompensations","data","fetch","json","compensations","console","log","compensationsItems","map","compensation","index","props","category","name","money","requirements","additional_info","once_a_term","CompensationList","Component","constructor","render","propTypes","String","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;;AAEA,eAAeC,gBAAf,GAAkC;AAC9B,MAAIC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAAC,gEAAD,CAAZ,EAAgFC,IAAhF,EAAjB;AACA,MAAIC,aAAa,GAAGH,IAApB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,MAAIG,kBAAkB,GAAGH,aAAa,CAACI,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,KACtC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA/B;AACU,IAAA,EAAE,EAAE,OADd;AAEU,IAAA,KAAK,EAAEH,YAAY,CAACI,IAF9B;AAGU,IAAA,KAAK,EAAEJ,YAAY,CAACK,KAH9B;AAIU,IAAA,SAAS,EAAEL,YAAY,CAACM,YAJlC;AAKU,IAAA,OAAO,EAAEN,YAAY,CAACO,eALhC;AAMU,IAAA,MAAM,EAAEP,YAAY,CAACQ,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoB,CAAzB;AASA,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH;;AAED,OAAO,MAAMW,gBAAN,SAA+BtB,KAAK,CAACuB,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH,GAHiD,CAKlD;;;AACAU,EAAAA,MAAM,GAAG;AACL,WAAOrB,gBAAgB,EAAvB;AAEH;;AATiD;AAYtDkB,gBAAgB,CAACI,SAAjB,GAA6B;AACzBV,EAAAA,QAAQ,EAAEW;AADe,CAA7B;AAIAL,gBAAgB,CAACM,YAAjB,GAAgC;AAC5BZ,EAAAA,QAAQ,EAAE;AADkB,CAAhC","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {Avatar} from \"../../components/main/avatar\";\n\nasync function getCompensations() {\n    let data = await (await fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard')).json();\n    let compensations = data;\n    console.log(compensations);\n    let compensationsItems = compensations.map((compensation, index) =>\n        (<ItemList category={this.props.category}\n                   id={\"drugs\"}\n                   title={compensation.name}\n                   money={compensation.money}\n                   documents={compensation.requirements}\n                   addInfo={compensation.additional_info}\n                   isOnce={compensation.once_a_term}\n        />));\n    return (\n        <div className=\"Block\">\n            <List items={compensationsItems}/>\n        </div>\n    );\n}\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        return getCompensations();\n\n    }\n}\n\nCompensationList.propTypes = {\n    category: String,\n};\n\nCompensationList.defaultProps = {\n    category: \"default\"\n};\n\n\n"]},"metadata":{},"sourceType":"module"}