{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { Avatar } from \"../../components/main/avatar\";\n\nfunction emptyFilter(array) {\n  if (array.length() === 1) {\n    return [];\n  } else {\n    return array;\n  }\n}\n\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    fetch('http://127.0.0.1:8000/api/compensations/?category_url=' + this.props.category).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    }).catch(console.log);\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    if (this.state) {\n      console.log(this.state.data.compensations);\n      return React.createElement(\"div\", {\n        className: \"Block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(List, {\n        items: this.state.data.compensations.map((compensation, index) => React.createElement(ItemList, {\n          category: \"standard\",\n          id: \"drugs\",\n          title: compensation.name,\n          money: emptyFilter(compensation.money.split(\"\\n\")),\n          documents: emptyFilter(compensation.requirements.split(\"\\n\")),\n          addInfo: emptyFilter(compensation.additional_info.split(\"\\n\")),\n          isOnce: compensation.once_a_term,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"Block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\");\n    }\n  }\n\n}\nCompensationList.propTypes = {\n  category: String\n};\nCompensationList.defaultProps = {\n  category: \"default\"\n};","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","Avatar","emptyFilter","array","length","CompensationList","Component","constructor","props","componentWillMount","fetch","category","then","res","json","data","setState","catch","console","log","render","state","compensations","map","compensation","index","name","money","split","requirements","additional_info","once_a_term","propTypes","String","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAIA,KAAK,CAACC,MAAN,OAAmB,CAAvB,EAA0B;AACtB,WAAO,EAAP;AACH,GAFD,MAEO;AACH,WAAOD,KAAP;AACH;AACJ;;AAED,OAAO,MAAME,gBAAN,SAA+BP,KAAK,CAACQ,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,KAAK,CAAC,2DAA2D,KAAKF,KAAL,CAAWG,QAAvE,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH,GAZiD,CAclD;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAT,EAAgB;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWN,IAAX,CAAgBO,aAA5B;AACA,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EACP,KAAKD,KAAL,CAAWN,IAAX,CAAgBO,aAAhB,CAA8BC,GAA9B,CAAkC,CAACC,YAAD,EAAeC,KAAf,KAC7B,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAE,UAApB;AACU,UAAA,EAAE,EAAE,OADd;AAEU,UAAA,KAAK,EAAED,YAAY,CAACE,IAF9B;AAGU,UAAA,KAAK,EAAExB,WAAW,CAACsB,YAAY,CAACG,KAAb,CAAmBC,KAAnB,CAAyB,IAAzB,CAAD,CAH5B;AAIU,UAAA,SAAS,EAAE1B,WAAW,CAACsB,YAAY,CAACK,YAAb,CAA0BD,KAA1B,CAAgC,IAAhC,CAAD,CAJhC;AAKU,UAAA,OAAO,EAAE1B,WAAW,CAACsB,YAAY,CAACM,eAAb,CAA6BF,KAA7B,CAAmC,IAAnC,CAAD,CAL9B;AAMU,UAAA,MAAM,EAAEJ,YAAY,CAACO,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH,KAjBD,MAiBO;AACH,aAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACH;AACJ;;AApCiD;AAuCtD1B,gBAAgB,CAAC2B,SAAjB,GAA6B;AACzBrB,EAAAA,QAAQ,EAAEsB;AADe,CAA7B;AAIA5B,gBAAgB,CAAC6B,YAAjB,GAAgC;AAC5BvB,EAAAA,QAAQ,EAAE;AADkB,CAAhC","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {Avatar} from \"../../components/main/avatar\";\n\n\nfunction emptyFilter(array) {\n    if (array.length() === 1) {\n        return [];\n    } else {\n        return array;\n    }\n}\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        fetch('http://127.0.0.1:8000/api/compensations/?category_url=' + this.props.category)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({data: data})\n            })\n            .catch(console.log)\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        if (this.state) {\n            console.log(this.state.data.compensations);\n            return (\n                <div className=\"Block\">\n                    <List items={\n                        this.state.data.compensations.map((compensation, index) =>\n                            (<ItemList category={\"standard\"}\n                                       id={\"drugs\"}\n                                       title={compensation.name}\n                                       money={emptyFilter(compensation.money.split(\"\\n\"))}\n                                       documents={emptyFilter(compensation.requirements.split(\"\\n\"))}\n                                       addInfo={emptyFilter(compensation.additional_info.split(\"\\n\"))}\n                                       isOnce={compensation.once_a_term}\n                            />))\n                    }/>\n                </div>\n            );\n        } else {\n            return(<div className=\"Block\">Загрузка</div>);\n        }\n    }\n}\n\nCompensationList.propTypes = {\n    category: String,\n};\n\nCompensationList.defaultProps = {\n    category: \"default\"\n};\n\n\n"]},"metadata":{},"sourceType":"module"}