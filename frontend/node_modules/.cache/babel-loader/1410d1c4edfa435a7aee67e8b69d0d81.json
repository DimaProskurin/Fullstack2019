{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { Avatar } from \"../../components/main/avatar\";\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard').then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    }).catch(console.log);\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(List, {\n      items: this.state.data.categories.map((compensation, index) => React.createElement(ItemList, {\n        category: this.props.category,\n        id: \"drugs\",\n        title: compensation.name,\n        money: compensation.money,\n        documents: compensation.requirements,\n        addInfo: compensation.additional_info,\n        isOnce: compensation.once_a_term,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\nCompensationList.propTypes = {\n  category: String\n};\nCompensationList.defaultProps = {\n  category: \"default\"\n};","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","Avatar","CompensationList","Component","constructor","props","componentWillMount","fetch","then","res","json","data","setState","catch","console","log","render","state","categories","map","compensation","index","category","name","money","requirements","additional_info","once_a_term","propTypes","String","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;AAEA,OAAO,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,KAAK,CAAC,gEAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH,GAZiD,CAclD;;;AACAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EACP,KAAKC,KAAL,CAAWN,IAAX,CAAgBO,UAAhB,CAA2BC,GAA3B,CAA+B,CAACC,YAAD,EAAeC,KAAf,KAC1B,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB,QAA/B;AACU,QAAA,EAAE,EAAE,OADd;AAEU,QAAA,KAAK,EAAEF,YAAY,CAACG,IAF9B;AAGU,QAAA,KAAK,EAAEH,YAAY,CAACI,KAH9B;AAIU,QAAA,SAAS,EAAEJ,YAAY,CAACK,YAJlC;AAKU,QAAA,OAAO,EAAEL,YAAY,CAACM,eALhC;AAMU,QAAA,MAAM,EAAEN,YAAY,CAACO,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAeH;;AA/BiD;AAkCtDzB,gBAAgB,CAAC0B,SAAjB,GAA6B;AACzBN,EAAAA,QAAQ,EAAEO;AADe,CAA7B;AAIA3B,gBAAgB,CAAC4B,YAAjB,GAAgC;AAC5BR,EAAAA,QAAQ,EAAE;AADkB,CAAhC","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {Avatar} from \"../../components/main/avatar\";\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillMount() {\n        fetch('http://127.0.0.1:8000/api/compensations/?category_url=standard')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({data: data})\n            })\n            .catch(console.log)\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        return (\n            <div className=\"Block\">\n                <List items={\n                    this.state.data.categories.map((compensation, index) =>\n                        (<ItemList category={this.props.category}\n                                   id={\"drugs\"}\n                                   title={compensation.name}\n                                   money={compensation.money}\n                                   documents={compensation.requirements}\n                                   addInfo={compensation.additional_info}\n                                   isOnce={compensation.once_a_term}\n                        />))\n                }/>\n            </div>\n        );\n    }\n}\n\nCompensationList.propTypes = {\n    category: String,\n};\n\nCompensationList.defaultProps = {\n    category: \"default\"\n};\n\n\n"]},"metadata":{},"sourceType":"module"}