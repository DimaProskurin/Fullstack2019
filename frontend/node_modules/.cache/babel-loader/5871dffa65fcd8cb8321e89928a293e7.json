{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/main/index.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { Avatar } from '../../components/main/avatar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { fetchCategories } from '../../actions/index';\nimport { getCategoriesFromDB } from \"../../utils\";\nconst BACK = 'http://127.0.0.1:8000/';\nexport class App extends React.Component {\n  componentDidMount() {\n    if (this.props.categoryList.length === 0) {\n      getCategoriesFromDB().then(categories => this.props.fetchCategories(categories));\n    }\n  }\n\n  render() {\n    if (this.props.categoryList.length !== 0) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-deck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.categoryList.map((category, index) => React.createElement(Avatar, {\n        url: category.url,\n        imageSrc: BACK + category.image,\n        title: category.name,\n        description: category.description,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border\",\n        style: {\n          width: \"5rem\",\n          height: \"5rem\",\n          role: \"status\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Loading...\"))));\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    categoryList: state.fetch.categories\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchCategories\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/main/index.jsx"],"names":["React","Avatar","connect","fetchCategories","getCategoriesFromDB","BACK","App","Component","componentDidMount","props","categoryList","length","then","categories","render","map","category","index","url","image","name","description","width","height","role","mapStateToProps","state","fetch","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,OAAO,kCAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,SAAQC,mBAAR,QAAkC,aAAlC;AAGA,MAAMC,IAAI,GAAG,wBAAb;AAGA,OAAO,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAErCC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACtCP,MAAAA,mBAAmB,GAAGQ,IAAtB,CAA4BC,UAAD,IAAgB,KAAKJ,KAAL,CAAWN,eAAX,CAA2BU,UAA3B,CAA3C;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKL,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,KAAmC,CAAvC,EAA0C;AACtC,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKF,KAAL,CAAWC,YAAX,CAAwBK,GAAxB,CAA4B,CAACC,QAAD,EAAWC,KAAX,KACvB,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAGD,QAAQ,CAACE,GAAvB;AAA6B,QAAA,QAAQ,EAAGb,IAAI,GAAGW,QAAQ,CAACG,KAAxD;AAAgE,QAAA,KAAK,EAAGH,QAAQ,CAACI,IAAjF;AACO,QAAA,WAAW,EAAGJ,QAAQ,CAACK,WAD9B;AAC4C,QAAA,GAAG,EAAEJ,KADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CAFR,CAHJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CADJ,CADJ;AAiBH,KAlBD,MAkBO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAACK,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,IAAI,EAAE;AAAtC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CADJ,CADJ;AASH;AACJ;;AAtCoC;;AAyCzC,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHhB,IAAAA,YAAY,EAAEgB,KAAK,CAACC,KAAN,CAAYd;AADvB,GAAP;AAGH;;AAED,MAAMe,kBAAkB,GAAG;AACvBzB,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAACuB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CtB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './styles.css';\nimport {Avatar} from '../../components/main/avatar'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {connect} from 'react-redux'\nimport {fetchCategories} from '../../actions/index'\nimport {getCategoriesFromDB} from \"../../utils\";\n\n\nconst BACK = 'http://127.0.0.1:8000/';\n\n\nexport class App extends React.Component {\n\n    componentDidMount() {\n        if (this.props.categoryList.length === 0) {\n            getCategoriesFromDB().then((categories) => this.props.fetchCategories(categories));\n        }\n    }\n\n    render() {\n        if (this.props.categoryList.length !== 0) {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <br/>\n                        <br/>\n                        <div className=\"card-deck\">\n                            {\n                                this.props.categoryList.map((category, index) =>\n                                    (<Avatar url={ category.url } imageSrc={ BACK + category.image } title={ category.name }\n                                            description={ category.description } key={index}/>))\n                            }\n                        </div>\n                        <br/>\n                        <br/>\n                    </header>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <div className=\"spinner-border\" style={{width: \"5rem\", height: \"5rem\", role: \"status\"}}>\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </header>\n                </div>\n            );\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        categoryList: state.fetch.categories\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchCategories\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}