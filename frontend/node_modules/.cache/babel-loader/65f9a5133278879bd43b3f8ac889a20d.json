{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/main/index.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { Avatar } from '../../components/main/avatar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { connect } from 'react-redux';\nimport { fetchCategories } from '../../actions/index';\nconst BACK = 'http://127.0.0.1:8000/';\n\nasync function getCategoriesFromDB() {\n  let response = await fetch('http://127.0.0.1:8000/api/categories/');\n  let data = await response.json();\n  return data.categories;\n}\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (Object.keys(this.props.categoryList).length === 0) {\n      let test = getCategoriesFromDB();\n      console.log(test);\n      fetch('http://127.0.0.1:8000/api/categories/').then(res => res.json()).then(data => {\n        console.log(\"fetch\");\n        this.props.fetchCategories(data.categories);\n      }).catch(console.log);\n    } else {\n      console.log(\"already here\");\n    }\n  }\n\n  render() {\n    if (Object.keys(this.props.categoryList).length !== 0) {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-deck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.props.categoryList.map((category, index) => React.createElement(Avatar, {\n        url: category.url,\n        imageSrc: BACK + category.image,\n        title: category.name,\n        description: category.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })));\n    } else return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u0417\\u0410\\u0413\\u0420\\u0423\\u0417\\u041A\\u0410\")));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    categoryList: state.categories.categories\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchCategories\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/main/index.jsx"],"names":["React","Avatar","connect","fetchCategories","BACK","getCategoriesFromDB","response","fetch","data","json","categories","App","Component","constructor","props","Object","keys","categoryList","length","test","console","log","then","res","catch","render","map","category","index","url","image","name","description","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles.css';\nimport {Avatar} from '../../components/main/avatar'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {connect} from 'react-redux'\nimport {fetchCategories} from '../../actions/index'\n\n\nconst BACK = 'http://127.0.0.1:8000/';\n\nasync function getCategoriesFromDB() {\n    let response = await fetch('http://127.0.0.1:8000/api/categories/');\n    let data = await response.json();\n    return data.categories;\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (Object.keys(this.props.categoryList).length === 0) {\n\n            let test = getCategoriesFromDB();\n            console.log(test);\n\n            fetch('http://127.0.0.1:8000/api/categories/')\n                .then(res => res.json())\n                .then((data) => {\n                    console.log(\"fetch\");\n                    this.props.fetchCategories(data.categories);\n                })\n                .catch(console.log);\n        } else {\n            console.log(\"already here\");\n        }\n    }\n\n    render() {\n        if(Object.keys(this.props.categoryList).length !== 0) {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <br/>\n                        <br/>\n                        <div className=\"card-deck\">\n                            {\n                                this.props.categoryList.map((category, index) =>\n                                    (<Avatar url={ category.url } imageSrc={ BACK + category.image } title={ category.name }\n                                            description={ category.description }/>))\n                            }\n                        </div>\n                        <br/>\n                        <br/>\n                    </header>\n                </div>\n            );\n        }else\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <p>ЗАГРУЗКА</p>\n                    </header>\n                </div>\n            );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        categoryList: state.categories.categories\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchCategories\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}