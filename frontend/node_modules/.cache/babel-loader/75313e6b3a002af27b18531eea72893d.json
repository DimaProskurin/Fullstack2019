{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/frontend/src/routes.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport { CompensationList } from \"./views/compensationList\";\nimport { CompensationInfo } from \"./components/generator/compensation\";\nimport { InputBlock } from \"./components/generator/input\";\nimport { ItemList } from \"./components/compensations/itemList\";\nimport { Generator } from \"./views/generator\";\nimport { Avatar } from \"./components/main/avatar\"; // Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\n\nexport class MainRouter extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    fetch('http://127.0.0.1:8000/api/categories').then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/history\",\n      component: HistoryMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), this.state.data.categories.map((categories, index) => React.createElement(Route, {\n      exact: true,\n      path: '/' + categories.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CompensationList, {\n      category: categories.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \")\")), React.createElement(Route, {\n      path: \"/standard/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/medicine/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/repairs/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/other/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default withRouter(MainRouter);","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/frontend/src/routes.jsx"],"names":["React","Component","Route","Switch","withRouter","App","HistoryMain","CompensationList","CompensationInfo","InputBlock","ItemList","Generator","Avatar","MainRouter","constructor","props","componentWillMount","fetch","then","res","json","data","setState","catch","console","log","render","state","categories","map","index","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,cAA1C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;AACA,SAAQC,gBAAR,QAA+B,qCAA/B;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,QAAR,QAAuB,qCAAvB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,MAAR,QAAqB,0BAArB,C,CAEA;;AACA,OAAO,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AACtCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAErB,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,SAAS,EAAEC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAIQ,KAAKqB,KAAL,CAAWN,IAAX,CAAgBO,UAAhB,CAA2BC,GAA3B,CAA+B,CAACD,UAAD,EAAaE,KAAb,KAC1B,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAE,MAAMF,UAAU,CAACG,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACO,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEH,UAAU,CAACG,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,MADL,CAJR,EAUI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAVJ,EAcI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAdJ,EAkBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAlBJ,EAsBI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAtBJ,CADJ;AA4BH;;AA3CqC;AA8C1C,eAAe3B,UAAU,CAACS,UAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport {CompensationList} from \"./views/compensationList\";\nimport {CompensationInfo} from \"./components/generator/compensation\";\nimport {InputBlock} from \"./components/generator/input\";\nimport {ItemList} from \"./components/compensations/itemList\";\nimport {Generator} from \"./views/generator\";\nimport {Avatar} from \"./components/main/avatar\";\n\n// Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\nexport class MainRouter extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentWillMount() {\n        fetch('http://127.0.0.1:8000/api/categories')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({data: data})\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path='/' component={App}/>\n                <Route exact path='/history' component={HistoryMain}/>\n                {\n                    this.state.data.categories.map((categories, index) =>\n                        (<Route exact path={'/' + categories.url}>\n                                <CompensationList category={categories.url}/>)\n                        </Route>))\n                }\n                \n                <Route path='/standard/'>\n                    <Generator/>\n                </Route>\n\n                <Route path='/medicine/'>\n                    <Generator/>\n                </Route>\n\n                <Route path='/repairs/'>\n                    <Generator/>\n                </Route>\n\n                <Route path='/other/'>\n                    <Generator/>\n                </Route>\n            </Switch>\n        );\n    }\n}\n\nexport default withRouter(MainRouter);"]},"metadata":{},"sourceType":"module"}