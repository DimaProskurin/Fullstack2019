{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { GeneratorMain } from \"../../components/generator/GeneratorMain\";\nimport { CompensationInfo } from \"../../components/generator/compensation\";\nimport { InputBlock } from \"../../components/generator/input\";\nimport { fetchCompensations } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport CompensationList from \"../compensationList\";\nimport { getCompensations } from \"../../utils\";\nexport class Generator extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (this.props.compensationList.length === 0) {\n      getCompensations().then(compensations => this.props.fetchCompensations(compensations));\n    }\n  }\n\n  render() {\n    let currentCompensation = this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl);\n    return React.createElement(\"div\", {\n      className: \"row generatorContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(CompensationInfo, {\n      name: currentCompensation.name,\n      money: currentCompensation.money,\n      once: currentCompensation.once_a_term,\n      requirements: currentCompensation.money,\n      additionalInfo: this.props.compensationAdditionalInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(InputBlock, {\n      compensationUrl: this.props.compensationName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })));\n  }\n\n}\nGenerator.propTypes = {\n  compensationUrl: String\n};\nGenerator.defaultProps = {\n  compensationUrl: \"\"\n};\n\nlet mapStateToProps = state => {\n  return {\n    compensationList: state.fetch.compensations\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCompensations\n};\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\nexport default Generator;","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx"],"names":["React","GeneratorMain","CompensationInfo","InputBlock","fetchCompensations","connect","CompensationList","getCompensations","Generator","Component","constructor","props","componentDidMount","compensationList","length","then","compensations","render","currentCompensation","filter","compensation","url","compensationUrl","name","money","once_a_term","compensationAdditionalInfo","compensationName","propTypes","String","defaultProps","mapStateToProps","state","fetch","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAAQC,aAAR,QAA4B,0CAA5B;AACA,SAAQC,gBAAR,QAA+B,yCAA/B;AACA,SAAQC,UAAR,QAAyB,kCAAzB;AACA,SAAQC,kBAAR,QAAiC,eAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,SAAQC,gBAAR,QAA+B,aAA/B;AAEA,OAAO,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKD,KAAL,CAAWE,gBAAX,CAA4BC,MAA5B,KAAuC,CAA3C,EAA8C;AAC1CP,MAAAA,gBAAgB,GAAGQ,IAAnB,CAAyBC,aAAD,IAAmB,KAAKL,KAAL,CAAWP,kBAAX,CAA8BY,aAA9B,CAA3C;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,mBAAmB,GACnB,KAAKP,KAAL,CAAWE,gBAAX,CAA4BM,MAA5B,CAAmCC,YAAY,IAAIA,YAAY,CAACC,GAAb,KAAqB,KAAKV,KAAL,CAAWW,eAAnF,CADJ;AAGA,WACI;AAAK,MAAA,SAAS,EAAE,wBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AACI,MAAA,IAAI,EAAEJ,mBAAmB,CAACK,IAD9B;AAEI,MAAA,KAAK,EAAEL,mBAAmB,CAACM,KAF/B;AAGI,MAAA,IAAI,EAAEN,mBAAmB,CAACO,WAH9B;AAII,MAAA,YAAY,EAAEP,mBAAmB,CAACM,KAJtC;AAKI,MAAA,cAAc,EAAE,KAAKb,KAAL,CAAWe,0BAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAE,qCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,eAAe,EAAE,KAAKf,KAAL,CAAWgB,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CADJ;AAeH;;AA9B0C;AAiC/CnB,SAAS,CAACoB,SAAV,GAAsB;AAClBN,EAAAA,eAAe,EAAEO;AADC,CAAtB;AAIArB,SAAS,CAACsB,YAAV,GAAyB;AACrBR,EAAAA,eAAe,EAAE;AADI,CAAzB;;AAIA,IAAIS,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHnB,IAAAA,gBAAgB,EAAEmB,KAAK,CAACC,KAAN,CAAYjB;AAD3B,GAAP;AAGH,CAJD;;AAMA,MAAMkB,kBAAkB,GAAG;AACvB9B,EAAAA;AADuB,CAA3B;AAIAI,SAAS,GAAGH,OAAO,CAAC0B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1B,SAA7C,CAAZ;AAEA,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport './styles.css'\nimport {GeneratorMain} from \"../../components/generator/GeneratorMain\";\nimport {CompensationInfo} from \"../../components/generator/compensation\";\nimport {InputBlock} from \"../../components/generator/input\";\nimport {fetchCompensations} from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport CompensationList from \"../compensationList\";\nimport {getCompensations} from \"../../utils\";\n\nexport class Generator extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (this.props.compensationList.length === 0) {\n            getCompensations().then((compensations) => this.props.fetchCompensations(compensations));\n        }\n    }\n\n    render() {\n        let currentCompensation =\n            this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl);\n\n        return (\n            <div className={\"row generatorContainer\"}>\n                <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                    <CompensationInfo\n                        name={currentCompensation.name}\n                        money={currentCompensation.money}\n                        once={currentCompensation.once_a_term}\n                        requirements={currentCompensation.money}\n                        additionalInfo={this.props.compensationAdditionalInfo}/>\n                </div>\n                <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                    <InputBlock compensationUrl={this.props.compensationName} />\n                </div>\n            </div>\n        )\n    }\n}\n\nGenerator.propTypes = {\n    compensationUrl: String,\n};\n\nGenerator.defaultProps = {\n    compensationUrl: \"\"\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        compensationList: state.fetch.compensations\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchCompensations\n};\n\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\n\nexport default Generator;\n\n\n"]},"metadata":{},"sourceType":"module"}