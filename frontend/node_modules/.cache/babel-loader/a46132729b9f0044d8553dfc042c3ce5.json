{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx\";\nimport React from 'react';\nimport './styles.css';\nimport { CompensationInfo } from \"../../components/generator/compensation\";\nimport { InputBlock } from \"../../components/generator/input\";\nimport { fetchCompensations } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { getCompensations } from \"../../utils\";\nimport { stringToArray } from \"../../utils\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport PropTypes from \"prop-types\";\nexport class Generator extends React.Component {\n  componentDidMount() {\n    if (this.props.compensationList.length === 0) {\n      getCompensations().then(compensations => this.props.fetchCompensations(compensations));\n    }\n  }\n\n  render() {\n    if (this.props.compensationList.length !== 0) {\n      console.log(this.props.compensationList);\n      let currentCompensation = this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl)[0];\n      return React.createElement(ReactCSSTransitionGroup, {\n        transitionName: \"fade\",\n        transitionAppear: true,\n        transitionAppearTimeout: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row generatorContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(CompensationInfo, {\n        url: currentCompensation.url,\n        name: currentCompensation.name,\n        money: stringToArray(currentCompensation.money),\n        once: currentCompensation.once_a_term,\n        requirements: stringToArray(currentCompensation.requirements),\n        additionalInfo: stringToArray(currentCompensation.additional_info),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-xs-6 col-sm-6 col-md-6 col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(InputBlock, {\n        compensationUrl: currentCompensation.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"spinner-border\",\n        style: {\n          width: \"5rem\",\n          height: \"5rem\",\n          role: \"status\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Loading...\"))));\n    }\n  }\n\n}\nGenerator.propTypes = {\n  compensationUrl: PropTypes.string\n};\nGenerator.defaultProps = {\n  compensationUrl: \"\"\n};\n\nlet mapStateToProps = state => {\n  return {\n    compensationList: state.fetch.compensations\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCompensations\n};\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\nexport default Generator;","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/generator/index.jsx"],"names":["React","CompensationInfo","InputBlock","fetchCompensations","connect","getCompensations","stringToArray","ReactCSSTransitionGroup","PropTypes","Generator","Component","componentDidMount","props","compensationList","length","then","compensations","render","console","log","currentCompensation","filter","compensation","url","compensationUrl","name","money","once_a_term","requirements","additional_info","width","height","role","propTypes","string","defaultProps","mapStateToProps","state","fetch","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles.css'\nimport {CompensationInfo} from \"../../components/generator/compensation\";\nimport {InputBlock} from \"../../components/generator/input\";\nimport {fetchCompensations} from \"../../actions\";\nimport {connect} from \"react-redux\";\nimport {getCompensations} from \"../../utils\";\nimport {stringToArray} from \"../../utils\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport PropTypes from \"prop-types\";\n\n\nexport class Generator extends React.Component {\n\n    componentDidMount() {\n        if (this.props.compensationList.length === 0) {\n            getCompensations().then((compensations) => this.props.fetchCompensations(compensations));\n        }\n    }\n\n    render() {\n        if (this.props.compensationList.length !== 0) {\n            console.log(this.props.compensationList);\n            let currentCompensation =\n                this.props.compensationList.filter(compensation => compensation.url === this.props.compensationUrl)[0];\n\n            return (\n                <ReactCSSTransitionGroup\n                    transitionName=\"fade\"\n                    transitionAppear={true}\n                    transitionAppearTimeout={400}\n                >\n                <div className={\"row generatorContainer\"}>\n                    <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                        <CompensationInfo\n                            url={currentCompensation.url}\n                            name={currentCompensation.name}\n                            money={stringToArray(currentCompensation.money)}\n                            once={currentCompensation.once_a_term}\n                            requirements={stringToArray(currentCompensation.requirements)}\n                            additionalInfo={stringToArray(currentCompensation.additional_info)}/>\n                    </div>\n                    <div className={\"col-xs-6 col-sm-6 col-md-6 col-lg-6\"}>\n                        <InputBlock compensationUrl={currentCompensation.name} />\n                    </div>\n                </div>\n                </ReactCSSTransitionGroup>\n            )\n        } else {\n            return (\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <div className=\"spinner-border\" style={{width: \"5rem\", height: \"5rem\", role: \"status\"}}>\n                            <span className=\"sr-only\">Loading...</span>\n                        </div>\n                    </header>\n                </div>\n            )\n        }\n\n    }\n}\n\nGenerator.propTypes = {\n    compensationUrl: PropTypes.string,\n};\n\nGenerator.defaultProps = {\n    compensationUrl: \"\"\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        compensationList: state.fetch.compensations\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchCompensations\n};\n\nGenerator = connect(mapStateToProps, mapDispatchToProps)(Generator);\n\nexport default Generator;\n\n\n"]},"metadata":{},"sourceType":"module"}