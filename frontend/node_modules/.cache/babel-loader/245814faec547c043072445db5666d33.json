{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { Avatar } from \"../../components/main/avatar\";\nimport { getCategoriesFromDB, getCompensations } from \"../../utils\";\n\nfunction stringToArray(string) {\n  if (string === '') return [];\n  return string.split('\\n');\n}\n\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props);\n    getCompensations(\"standard\").then(compensations => console.log(compensations));\n  }\n\n  componentWillMount() {\n    fetch('http://127.0.0.1:8000/api/compensations/?category_url=' + this.props.category).then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    }).catch(console.log);\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    if (this.state) {\n      return React.createElement(\"div\", {\n        className: \"Block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(List, {\n        items: this.state.data.compensations.map((compensation, index) => React.createElement(ItemList, {\n          category: this.props.category,\n          id: compensation.url,\n          title: compensation.name,\n          money: stringToArray(compensation.money),\n          documents: stringToArray(compensation.requirements),\n          addInfo: stringToArray(compensation.additional_info),\n          isOnce: compensation.once_a_term,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"Block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430\");\n    }\n  }\n\n}\nCompensationList.propTypes = {\n  category: String\n};\nCompensationList.defaultProps = {\n  category: \"default\"\n};","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","Avatar","getCategoriesFromDB","getCompensations","stringToArray","string","split","CompensationList","Component","constructor","props","then","compensations","console","log","componentWillMount","fetch","category","res","json","data","setState","catch","render","state","map","compensation","index","url","name","money","requirements","additional_info","once_a_term","propTypes","String","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,MAAR,QAAqB,8BAArB;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,QAAoD,aAApD;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,MAAIA,MAAM,KAAK,EAAf,EACI,OAAQ,EAAR;AACJ,SAAOA,MAAM,CAACC,KAAP,CAAa,IAAb,CAAP;AACH;;AAED,OAAO,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEAP,IAAAA,gBAAgB,CAAC,UAAD,CAAhB,CAA6BQ,IAA7B,CAAmCC,aAAD,IAAmBC,OAAO,CAACC,GAAR,CAAYF,aAAZ,CAArD;AACH;;AAEDG,EAAAA,kBAAkB,GAAG;AACjBC,IAAAA,KAAK,CAAC,2DAA2D,KAAKN,KAAL,CAAWO,QAAvE,CAAL,CACKN,IADL,CACUO,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKR,IAFL,CAEWS,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AAACD,QAAAA,IAAI,EAAEA;AAAP,OAAd;AACH,KAJL,EAKKE,KALL,CAKWT,OAAO,CAACC,GALnB;AAMH,GAdiD,CAgBlD;;;AACAS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKC,KAAT,EAAgB;AACZ,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EACP,KAAKA,KAAL,CAAWJ,IAAX,CAAgBR,aAAhB,CAA8Ba,GAA9B,CAAkC,CAACC,YAAD,EAAeC,KAAf,KAC7B,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAG,KAAKjB,KAAL,CAAWO,QAAhC;AACU,UAAA,EAAE,EAAGS,YAAY,CAACE,GAD5B;AAEU,UAAA,KAAK,EAAEF,YAAY,CAACG,IAF9B;AAGU,UAAA,KAAK,EAAGzB,aAAa,CAACsB,YAAY,CAACI,KAAd,CAH/B;AAIU,UAAA,SAAS,EAAG1B,aAAa,CAACsB,YAAY,CAACK,YAAd,CAJnC;AAKU,UAAA,OAAO,EAAG3B,aAAa,CAACsB,YAAY,CAACM,eAAd,CALjC;AAMU,UAAA,MAAM,EAAEN,YAAY,CAACO,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH,KAhBD,MAgBO;AACH,aAAO;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAP;AACH;AACJ;;AArCiD;AAwCtD1B,gBAAgB,CAAC2B,SAAjB,GAA6B;AACzBjB,EAAAA,QAAQ,EAAEkB;AADe,CAA7B;AAIA5B,gBAAgB,CAAC6B,YAAjB,GAAgC;AAC5BnB,EAAAA,QAAQ,EAAE;AADkB,CAAhC","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {Avatar} from \"../../components/main/avatar\";\nimport {getCategoriesFromDB, getCompensations} from \"../../utils\";\n\nfunction stringToArray(string) {\n    if (string === '')\n        return  [];\n    return string.split('\\n');\n}\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        getCompensations(\"standard\").then((compensations) => console.log(compensations));\n    }\n\n    componentWillMount() {\n        fetch('http://127.0.0.1:8000/api/compensations/?category_url=' + this.props.category)\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({data: data})\n            })\n            .catch(console.log)\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        if (this.state) {\n            return (\n                <div className=\"Block\">\n                    <List items={\n                        this.state.data.compensations.map((compensation, index) =>\n                            (<ItemList category={ this.props.category }\n                                       id={ compensation.url }\n                                       title={compensation.name}\n                                       money={ stringToArray(compensation.money) }\n                                       documents={ stringToArray(compensation.requirements) }\n                                       addInfo={ stringToArray(compensation.additional_info) }\n                                       isOnce={compensation.once_a_term}\n                            />))\n                    }/>\n                </div>\n            );\n        } else {\n            return(<div className=\"Block\">Загрузка</div>);\n        }\n    }\n}\n\nCompensationList.propTypes = {\n    category: String,\n};\n\nCompensationList.defaultProps = {\n    category: \"default\"\n};\n\n\n"]},"metadata":{},"sourceType":"module"}