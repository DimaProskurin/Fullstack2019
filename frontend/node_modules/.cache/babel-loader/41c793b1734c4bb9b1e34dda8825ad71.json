{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/routes.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport { CompensationList } from \"./views/compensationList\";\nimport { Generator } from \"./views/generator\";\nimport { fetchCategories } from \"./actions\";\nimport { fetchCompensations } from \"./actions\";\nimport { connect } from \"react-redux\";\nimport { getCategoriesFromDB, getCompensations } from \"./utils\"; // Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\n\nexport class MainRouter extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    if (this.props.categoryList.length === 0 || this.props.compensationList.length === 0) {\n      getCategoriesFromDB().then(categories => this.props.fetchCategories(categories));\n      getCompensations().then(compensations => this.props.fetchCompensations(compensations));\n    }\n  }\n\n  render() {\n    console.log(this.props.categoryList);\n    console.log(this.props.compensationList);\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: App,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/history\",\n      component: HistoryMain,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/standard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(CompensationList, {\n      categoryUrl: 'standard',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(CompensationList, {\n      categoryUrl: 'medicine',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/repairs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(CompensationList, {\n      categoryUrl: 'repairs',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/other\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(CompensationList, {\n      categoryUrl: 'other',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/standard/tickets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"tickets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/standard/onetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"onetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/drugs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"drugs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/doctors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"doctors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/operations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"operations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/equipment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"equipment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/teeth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"teeth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/blood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"blood\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: \"/medicine/document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Generator, {\n      compensationUrl: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    categoryList: state.fetch.categories,\n    compensationList: state.fetch.compensations\n  };\n};\n\nconst mapDispatchToProps = {\n  fetchCategories,\n  fetchCompensations\n};\nMainRouter = connect(mapStateToProps, mapDispatchToProps)(MainRouter);\nexport default withRouter(MainRouter);","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/routes.jsx"],"names":["React","Component","Route","Switch","withRouter","App","HistoryMain","CompensationList","Generator","fetchCategories","fetchCompensations","connect","getCategoriesFromDB","getCompensations","MainRouter","constructor","props","componentDidMount","categoryList","length","compensationList","then","categories","compensations","render","console","log","mapStateToProps","state","fetch","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport {CompensationList} from \"./views/compensationList\";\nimport {Generator} from \"./views/generator\";\nimport {fetchCategories} from \"./actions\";\nimport {fetchCompensations} from \"./actions\";\nimport {connect} from \"react-redux\";\nimport {getCategoriesFromDB, getCompensations} from \"./utils\";\n\n// Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\nexport class MainRouter extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        if (this.props.categoryList.length === 0 || this.props.compensationList.length === 0) {\n            getCategoriesFromDB().then((categories) => this.props.fetchCategories(categories));\n            getCompensations().then((compensations) => this.props.fetchCompensations(compensations));\n        }\n    }\n\n    render() {\n        console.log(this.props.categoryList);\n        console.log(this.props.compensationList);\n\n        return (\n            <Switch>\n                <Route exact path='/' component={App}/>\n\n                <Route exact path='/history' component={HistoryMain}/>\n\n\n                <Route exact path='/standard'>\n                    <CompensationList categoryUrl={'standard'} />\n                </Route>\n\n                <Route exact path='/medicine'>\n                    <CompensationList categoryUrl={'medicine'}/>\n                </Route>\n\n                <Route exact path='/repairs'>\n                    <CompensationList categoryUrl={'repairs'}/>\n                </Route>\n\n                <Route exact path='/other'>\n                    <CompensationList categoryUrl={'other'}/>\n                </Route>\n\n\n\n\n                <Route exact path='/standard/tickets'>\n                    <Generator compensationUrl={\"tickets\"}/>\n                </Route>\n\n                <Route exact path='/standard/onetime'>\n                    <Generator compensationUrl={\"onetime\"}/>\n                </Route>\n\n                <Route exact path='/medicine/drugs'>\n                    <Generator compensationUrl={\"drugs\"} />\n                </Route>\n\n                <Route exact path='/medicine/doctors'>\n                    <Generator compensationUrl={\"doctors\"} />\n                </Route>\n\n                <Route exact path='/medicine/operations'>\n                    <Generator compensationUrl={\"operations\"} />\n                </Route>\n\n                <Route exact path='/medicine/equipment'>\n                    <Generator compensationUrl={\"equipment\"} />\n                </Route>\n\n                <Route exact path='/medicine/teeth'>\n                    <Generator compensationUrl={\"teeth\"} />\n                </Route>\n\n                <Route exact path='/medicine/blood'>\n                    <Generator compensationUrl={\"blood\"} />\n                </Route>\n\n                <Route exact path='/medicine/document'>\n                    <Generator compensationUrl={\"document\"} />\n                </Route>\n            </Switch>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        categoryList: state.fetch.categories,\n        compensationList: state.fetch.compensations\n    };\n};\n\nconst mapDispatchToProps = {\n    fetchCategories,\n    fetchCompensations,\n};\n\nMainRouter = connect(mapStateToProps, mapDispatchToProps)(MainRouter);\n\nexport default withRouter(MainRouter);\n"]},"metadata":{},"sourceType":"module"}