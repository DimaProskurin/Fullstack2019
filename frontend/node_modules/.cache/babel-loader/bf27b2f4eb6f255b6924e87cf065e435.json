{"ast":null,"code":"var _jsxFileName = \"/Users/proskurin-d/fullstack2019/frontend/src/views/compensationList/index.jsx\";\nimport React from 'react';\nimport { List } from \"../../components/compensations/list\";\nimport { ItemList } from \"../../components/compensations/itemList\";\nimport './styles.css';\nimport { fetchCompensations } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nfunction stringToArray(string) {\n  if (string === '') return [];\n  return string.split('\\n');\n}\n\nexport class CompensationList extends React.Component {\n  constructor(props) {\n    super(props); // getCompensations().then((compensations) => this.props.fetchCategories(compensations));\n  }\n\n  componentDidMount() {\n    if (this.props.compensationList.length === 0) {\n      alert(\"hqwejkhkhas;dk\");\n    }\n  } // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n\n\n  render() {\n    if (false) {\n      return React.createElement(\"div\", {\n        className: \"Block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(List, {\n        items: this.props.compensationList.map((compensation, index) => React.createElement(ItemList, {\n          category: this.props.category,\n          id: compensation.url,\n          title: compensation.name,\n          money: stringToArray(compensation.money),\n          documents: stringToArray(compensation.requirements),\n          addInfo: stringToArray(compensation.additional_info),\n          isOnce: compensation.once_a_term,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"spinner-border\",\n        style: {\n          width: \"5rem\",\n          height: \"5rem\",\n          role: \"status\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Loading...\"));\n    }\n  }\n\n} // CompensationList.propTypes = {\n//     category: String,\n// };\n//\n// CompensationList.defaultProps = {\n//     category: \"default\"\n// };\n\nfunction mapStateToProps(state) {\n  console.log(\"afsjfahlsdkjfhadsk\");\n  return {\n    compensationList: state.fetch.compensations\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchCompensations\n};\nexport default connect(mapStateToProps, null)(CompensationList);","map":{"version":3,"sources":["/Users/proskurin-d/fullstack2019/frontend/src/views/compensationList/index.jsx"],"names":["React","List","ItemList","fetchCompensations","connect","stringToArray","string","split","CompensationList","Component","constructor","props","componentDidMount","compensationList","length","alert","render","map","compensation","index","category","url","name","money","requirements","additional_info","once_a_term","width","height","role","mapStateToProps","state","console","log","fetch","compensations","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,qCAAnB;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,cAAP;AACA,SAAQC,kBAAR,QAAiC,eAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,MAAIA,MAAM,KAAK,EAAf,EACI,OAAQ,EAAR;AACJ,SAAOA,MAAM,CAACC,KAAP,CAAa,IAAb,CAAP;AACH;;AAED,OAAO,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA+C;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKD,KAAL,CAAWE,gBAAX,CAA4BC,MAA5B,KAAuC,CAA3C,EAA8C;AAC1CC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,GAViD,CAYlD;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAJ,EAAW;AACP,aACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EACP,KAAKL,KAAL,CAAWE,gBAAX,CAA4BI,GAA5B,CAAgC,CAACC,YAAD,EAAeC,KAAf,KAC3B,oBAAC,QAAD;AAAU,UAAA,QAAQ,EAAG,KAAKR,KAAL,CAAWS,QAAhC;AACU,UAAA,EAAE,EAAGF,YAAY,CAACG,GAD5B;AAEU,UAAA,KAAK,EAAEH,YAAY,CAACI,IAF9B;AAGU,UAAA,KAAK,EAAGjB,aAAa,CAACa,YAAY,CAACK,KAAd,CAH/B;AAIU,UAAA,SAAS,EAAGlB,aAAa,CAACa,YAAY,CAACM,YAAd,CAJnC;AAKU,UAAA,OAAO,EAAGnB,aAAa,CAACa,YAAY,CAACO,eAAd,CALjC;AAMU,UAAA,MAAM,EAAEP,YAAY,CAACQ,WAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAeH,KAhBD,MAgBO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,IAAI,EAAE;AAAtC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ;AAKH;AACJ;;AArCiD,C,CAwCtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,SAAO;AACHpB,IAAAA,gBAAgB,EAAEkB,KAAK,CAACG,KAAN,CAAYC;AAD3B,GAAP;AAGH;;AAED,MAAMC,kBAAkB,GAAG;AACvBjC,EAAAA;AADuB,CAA3B;AAIA,eAAeC,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BtB,gBAA/B,CAAf","sourcesContent":["import React from 'react';\nimport {List} from \"../../components/compensations/list\";\nimport {ItemList} from \"../../components/compensations/itemList\";\nimport './styles.css'\nimport {fetchCompensations} from \"../../actions\";\nimport {connect} from \"react-redux\";\n\nfunction stringToArray(string) {\n    if (string === '')\n        return  [];\n    return string.split('\\n');\n}\n\nexport class CompensationList extends React.Component {\n    constructor(props) {\n        super(props);\n        // getCompensations().then((compensations) => this.props.fetchCategories(compensations));\n    }\n\n    componentDidMount() {\n        if (this.props.compensationList.length === 0) {\n            alert(\"hqwejkhkhas;dk\");\n        }\n    }\n\n    // Получение данных для всех ItemList должно приходить через БД из таблицы с этими компенсациями\n    render() {\n        if (false) {\n            return (\n                <div className=\"Block\">\n                    <List items={\n                        this.props.compensationList.map((compensation, index) =>\n                            (<ItemList category={ this.props.category }\n                                       id={ compensation.url }\n                                       title={compensation.name}\n                                       money={ stringToArray(compensation.money) }\n                                       documents={ stringToArray(compensation.requirements) }\n                                       addInfo={ stringToArray(compensation.additional_info) }\n                                       isOnce={compensation.once_a_term}\n                            />))\n                    }/>\n                </div>\n            );\n        } else {\n            return(\n                <div className=\"spinner-border\" style={{width: \"5rem\", height: \"5rem\", role: \"status\"}}>\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            );\n        }\n    }\n}\n\n// CompensationList.propTypes = {\n//     category: String,\n// };\n//\n// CompensationList.defaultProps = {\n//     category: \"default\"\n// };\n\nfunction mapStateToProps(state) {\n    console.log(\"afsjfahlsdkjfhadsk\");\n    return {\n        compensationList: state.fetch.compensations\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchCompensations\n};\n\nexport default connect(mapStateToProps, null)(CompensationList);\n"]},"metadata":{},"sourceType":"module"}