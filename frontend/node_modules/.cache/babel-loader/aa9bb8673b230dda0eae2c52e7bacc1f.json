{"ast":null,"code":"var _jsxFileName = \"/Users/grosul/fullstack/Fullstack2019/src/routes.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport { CompensationList } from \"./views/compensationList\";\nimport { CompensationInfo } from \"./components/generator/compensation\";\nimport { InputBlock } from \"./components/generator/input\";\nimport { ItemList } from \"./components/compensations/itemList\";\nimport { Generator } from \"./views/generator\";\nimport { Avatar } from \"./components/main/avatar\"; // Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\n\nexport class MainRouter extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  async getState() {\n    await fetch('http://127.0.0.1:8000/api/categories/').then(res => res.json()).then(data => {\n      this.setState({\n        data: data\n      });\n    }).catch(console.log);\n  }\n\n  render() {\n    this.getState();\n    console.log(this.state);\n\n    if (this.state) {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: App,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/history\",\n        component: HistoryMain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), this.state.data.categories.map((category, index) => React.createElement(Route, {\n        exact: true,\n        path: '/' + category.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(CompensationList, {\n        category: category.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))), this.state.data.categories.map((category, index) => React.createElement(Route, {\n        path: '/' + category + '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Generator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(Route, {\n        exact: true,\n        path: \"/standard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CompensationList, {\n        category: 'standard',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/medicine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CompensationList, {\n        category: 'medicine',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/repairs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CompensationList, {\n        category: 'repairs',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/other\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CompensationList, {\n        category: 'other',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/standard/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Generator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/medicine/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Generator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/repairs/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Generator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(Route, {\n        path: \"/other/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Generator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default withRouter(MainRouter);","map":{"version":3,"sources":["/Users/grosul/fullstack/Fullstack2019/src/routes.jsx"],"names":["React","Component","Route","Switch","withRouter","App","HistoryMain","CompensationList","CompensationInfo","InputBlock","ItemList","Generator","Avatar","MainRouter","constructor","props","getState","fetch","then","res","json","data","setState","catch","console","log","render","state","categories","map","category","index","url"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport App from \"./views/main/index\";\nimport HistoryMain from \"./views/history\";\nimport {CompensationList} from \"./views/compensationList\";\nimport {CompensationInfo} from \"./components/generator/compensation\";\nimport {InputBlock} from \"./components/generator/input\";\nimport {ItemList} from \"./components/compensations/itemList\";\nimport {Generator} from \"./views/generator\";\nimport {Avatar} from \"./components/main/avatar\";\n\n// Аналогично CompensationList все пути должны генерироваться исходя из БД с текущими категориями и компенсациями\nexport class MainRouter extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    async getState() {\n        await fetch('http://127.0.0.1:8000/api/categories/')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({data: data})\n            })\n            .catch(console.log);\n    }\n    \n    render() {\n        this.getState();\n        console.log(this.state);\n        if (this.state) {\n            return (\n                <Switch>\n                    <Route exact path='/' component={App}/>\n                    <Route exact path='/history' component={HistoryMain}/>\n\n                    {\n                        this.state.data.categories.map((category, index) =>\n                            (<Route exact path={ '/' + category.url }>\n                                    <CompensationList category={ category.url}/>\n                                </Route>\n                            ))\n                    }\n                    {\n                        this.state.data.categories.map((category, index) =>\n                            (<Route path= { '/' + category + '/' }>\n                                <Generator/>\n                            </Route>))\n                    }\n\n                    <Route exact path='/standard'>\n                        <CompensationList category={'standard'}/>\n                    </Route>\n\n                    <Route exact path='/medicine'>\n                        <CompensationList category={'medicine'}/>\n                    </Route>\n\n                    <Route exact path='/repairs'>\n                        <CompensationList category={'repairs'}/>\n                    </Route>\n\n                    <Route exact path='/other'>\n                        <CompensationList category={'other'}/>\n                    </Route>\n\n                    <Route path='/standard/'>\n                        <Generator/>\n                    </Route>\n\n                    <Route path='/medicine/'>\n                        <Generator/>\n                    </Route>\n\n                    <Route path='/repairs/'>\n                        <Generator/>\n                    </Route>\n\n                    <Route path='/other/'>\n                        <Generator/>\n                    </Route>\n                </Switch>\n            );\n        }\n    }\n}\n\nexport default withRouter(MainRouter);"]},"metadata":{},"sourceType":"module"}